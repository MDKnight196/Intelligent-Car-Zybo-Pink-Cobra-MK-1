/*
 * bluetooth.c
 *
 *  Created on: Dec 6, 2016
 *      Author: ulab
 */

#include "bluetooth.h"

int bluetoothSetup(u16 DeviceId, u8 *iBuffer, u8 *oBuffer, XUartPs *InstancePtr)
{
	int i, Status;
	XUartPs_Config *Config;


	/*
	 * Initialize the UART driver so that it's ready to use.
	 * Look up the configuration in the config table, then initialize it.
	 */
	Config = XUartPs_LookupConfig(DeviceId);
	if (NULL == Config) {
		return XST_FAILURE;
	}

	Status = XUartPs_CfgInitialize(InstancePtr, Config, Config->BaseAddress);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/*
	 * Check hardware build.
	 */
	Status = XUartPs_SelfTest(InstancePtr);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/*
	 * Use normal mode.
	 */
	XUartPs_SetOperMode(InstancePtr, XUARTPS_OPER_MODE_NORMAL);

	/*
	 * Initialize the send buffer bytes with a pattern and zero out
	 * the receive buffer.
	 */

	for(i=0; i<BUFFER_SIZE; i++){
		oBuffer[i]=0;
	}
	iBuffer=0;
	//set time = 1
	//XUartPs_SetRecvTimeout(InstancePtr, 1);
	XUartPs_SetBaudRate(InstancePtr, 38400);
	return XST_SUCCESS;
}

int addToString(u8 *buffer, float value, int index){
	int digit[10];
	int i=0;
	int v;
	if(!(value == (int)value)){
		v=value*10;

	}
	else
		v=value;

	do{
		digit[i]=v%10;
		i++;
		v /= 10;
	}while(v > 0);
	while(i > 0){
		i--;
		buffer[index]=digit[i]+'0';
		index++;
		if(value == (int)value && i==0){
			buffer[index]='.';
			index++;
		}
	}
	buffer[index]=' ';
	index++;
	return index;

}

int newline(u8 *buffer, int index){
	outputBuffer[index-1]=';';
	outputBuffer[index]='\r';
	outputBuffer[index+1]='\n';
	return index+=2;
}
